<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">
        
        
    <mvc:annotation-driven/>     
    
    <context:component-scan base-package="mybatis.dao" /> 
    <context:component-scan base-package="mybatis.service" />
     
<!-- 
    <bean id="sampleService2" class="mybatis.service.ServiceBook">
        <property name="session" ref="sqlSession" />
        <property name="dao"     ref="daobook" />
    </bean>
    
    <bean id="daobook" class="mybatis.dao.DaoBook">
        <property name="session" ref="sqlSession" />
    </bean>
-->  
    
    <!-- 커넥션 설정 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName"            value="oracle.jdbc.driver.OracleDriver" />
        <property name="url"                        value="jdbc:oracle:thin:@//localhost:1521/pdborcl" />
        <property name="username"                   value="tester1" />
        <property name="password"                   value="1234" />  
             
        <property name="defaultAutoCommit"          value="true"/> 
        <property name="poolPreparedStatements"     value="true"/>
        <property name="cacheState"                 value="true"/>
    </bean>
    
    
    <!-- SessionFactory 설정 :: MyBatis가 사용할 Database에 연결하도록 설정 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource"         ref="dataSource" />
        <property name="configLocation"     value="classpath:Configuration.xml" />
        
        <!-- mybatis 디렉토리에 xml 파일만 추가해주면 알아서 xml내의 쿼리 자동 인식 -->
        <!-- <property name="mapperLocations"    value="classpath*:mybatis/**/mapper*.xml" />  -->
    </bean>
 
    <!-- MyBatis의 CRUD 템플릿을 사용할 수 있도록 설정 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="singleton">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>

    <!-- Transaction 설정하기 -->
    <!-- Transaction Manager 설정 commit, rollback -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 실질적으로 트랜잭션 advice가 어디서 필요한지 알려줌 -->
    <aop:config proxy-target-class="true">
        <!-- 패키지 mybatis. 이하의 모든 메서드에 pointcut을 걸음. -->
        <aop:pointcut id="serviceOperation"  expression="execution(public * mybatis..service.*Service*.*(..))" />
        
        <!-- ~Service2라는 bean 이름을 가진 클래스에 pointcut을 걸음. 
        <aop:pointcut id="txAdvisePointcut" expression="bean(*Service2)" />  
        -->
        
        <aop:advisor id="transactionAdvisor" advice-ref="txAdvice" pointcut-ref="serviceOperation" />
    </aop:config>
    

    <!-- Transaction 대상 설정 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>

            <tx:method name="read*"         read-only="true" />
            <tx:method name="select*"       read-only="true" />
            <tx:method name="get*"          read-only="true" />
	    
            <tx:method name="*insert*"       rollback-for="RuntimeException" />
            <tx:method name="write*"        rollback-for="RuntimeException" />
            <tx:method name="add*"          rollback-for="RuntimeException" />
            <tx:method name="create*"       rollback-for="RuntimeException" />
            <tx:method name="regist*"       rollback-for="RuntimeException" />
            <tx:method name="set*"          rollback-for="RuntimeException" />

            <tx:method name="*update*"       rollback-for="RuntimeException" />
            <tx:method name="modify*"       rollback-for="RuntimeException" />
            <tx:method name="edit*"         rollback-for="RuntimeException" />
            <tx:method name="change*"       rollback-for="RuntimeException" />

            <tx:method name="*delete*"       rollback-for="RuntimeException" />
            <tx:method name="remove"        rollback-for="RuntimeException" />
            <tx:method name="terminate*"    rollback-for="RuntimeException" />
        </tx:attributes>
    </tx:advice>

</beans>